repo_root() { git rev-parse --show-toplevel ;}

grt() { cd "$(repo_root)" ; }

function mystart() { [[ "$(mysql.server status)" =~ "ERROR"* ]] && mysql.server start ;}

myexec() { mysql -uroot -p -e "$*;" ;}

function lg() { ls -lA . | grep -i $1 ;}

md(){ mkdir -p $1 && cd $1 ;}

cr() {
  if [[ $# -ge 2 ]]; then
    cp $1 $2
    echo "Removing $1"
    rm -f $1
  else
    echo "2 arguments needed."
  fi
}

extract() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2) tar xvjf $1    ;;
      *.tar.gz)  tar xvzf $1    ;;
      *.bz2)     bunzip2 $1     ;;
      *.rar)     unrar e $1     ;;
      *.gz)      gunzip $1      ;;
      *.tar)     tar xvf $1     ;;
      *.tbz2)    tar xvjf $1    ;;
      *.tgz)     tar xvzf $1    ;;
      *.zip)     unzip $1       ;;
      *.Z)       uncompress $1  ;;
      *.7z)      7z x $1        ;;

      *) echo "don't know how to extract '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

reloadshell() { exec $SHELL -l ;}

githubrepo(){
  if [[ $# -ge 1 ]]; then
    local repo_name repo_url origin
    repo_name=$1
    repo_url="$(curl -u 'leandro' https://api.github.com/user/repos -d "{\"name\":\"$repo_name\"}" | grep ssh_url | cut -d\"  -f4 )"
    origin="$(git remote -v | grep origin)"
    if [ ! -z "$repo_url" -a -z "$origin" ]; then
      git remote add origin $repo_url
    fi
  else
    echo 'Need a repo name at least'
  fi
}
